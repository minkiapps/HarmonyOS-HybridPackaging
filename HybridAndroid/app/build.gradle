plugins {
    id 'com.huawei.ohos.lion' // App Hybrid
    id 'com.android.application'
    id 'kotlin-android'
}

def keystorePropertiesFile = rootProject.file("signing/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load((new FileInputStream(keystorePropertiesFile)))

// App Hybrid
def harmonySupport = true
def applicationClassPath = "com/minkiapps/android/hybrid/App.java"
legacyAndroid {
    subApplicationClass applicationClassPath
    ohosSupport = harmonySupport
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.minkiapps.android.hybrid"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // AppHybrid
    sourceSets {
        main {
            if (harmonySupport) {
                manifest.srcFile 'build/tmp/ohosAndroidManifest/AndroidManifest.xml'
            }
            java {
                if (harmonySupport) {
                    srcDirs 'build/tmp/ohosSubApplicationClass'
                    exclude applicationClassPath
                }
            }

        }
    }

    // App Hybrid
    if(harmonySupport) {
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${variant.name}-entry.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    // AppHybrid
    implementation files("libs/abilityshell-1.0.0.jar")
}